!function(module){module.factory("KeyService",function(){return new function(){this.getString=function($event){return _.compact([$event.ctrlKey?"Ctrl":"",$event.altKey?"Alt":"",$event.shiftKey?"Shift":"","Control"===$event.key&&$event.ctrlKey||"Alt"===$event.key&&$event.altKey||"Shift"===$event.key&&$event.shiftKey||"Meta"===$event.key&&$event.metaKey?"":$event.key]).join("+")||""}}}).factory("DialogService",["KeyService",function(KeyService){return $(window).on("resize",function(){$("dialog").each(function(index,dialog){dialog.close(),dialog.showModal()})}),$(document).on("keydown keyup keypress",function($event){KeyService.getString($event).match(/(Shift\+)?Escape/)&&$event.preventDefault()}),{}}]).directive("dialog",["DialogService",function(DialogService){return{restrict:"E",link:function($scope,$element){$element[0].showModal()}}}]),module.config(["$qProvider","$resourceProvider",function($qProvider,$resourceProvider){$qProvider.errorOnUnhandledRejections(!1),$resourceProvider.defaults.cancellable=!0}]).service("RestfulService",["$resource",function($resource){return function(url,paramDefaults,actions){var resource=$resource.apply($resource,arguments);return resource.requests=resource.requests||{},resource.abort=function(method){return method&&resource.requests[method]?(resoure.requests[method].$cancelRequest(),delete resource.requests[method]):(_.invokeMap(resource.requests,"$cancelRequest"),resource.requests={}),resource},_.forEach(_.keys(actions),function(method){var original=resource[method];_.isFunction(original)&&(resource[method]=function(){return resource.requests[method]=original.apply(resource,arguments),resource.requests[method].$promise})}),resource}}]),module.factory("SessionProvider",[function(){return new function(){this.set=function(key,value){return sessionStorage.setItem(key,value)},this.get=function(key){return sessionStorage.getItem(key)},this.remove=function(key){return sessionStorage.removeItem(key)}}}]),module.factory("GamesResource",["RestfulService",function(RestfulService){return RestfulService("data/games.php",null,{load:{method:"POST",params:{action:"load"}}})}]),module.factory("UsersResource",["RestfulService",function(RestfulService){return RestfulService("data/users.php",null,{login:{method:"POST",params:{action:"login"}},logout:{method:"POST",params:{action:"logout"}},register:{method:"POST",params:{action:"register"}}})}]),module.config(["$stateProvider",function($stateProvider){$stateProvider.state("games",{abstract:!0,template:"<ui-view />"})}]),module.config(["$stateProvider",function($stateProvider){$stateProvider.state("games.load",{controller:"LoadController",templateUrl:"app/templates/games/load.html"})}]).controller("LoadController",["$scope","$state","GamesResource","SessionProvider",function($scope,$state,GamesResource,SessionProvider){$scope.model={userId:SessionProvider.get("userId")},$scope.flags={busy:!0},$scope.load=function(){},GamesResource.abort().load($scope.model).then(function(response){response.success?($scope.games=response.model,_.get($scope,"games[0]")&&($scope.model.gameId=$scope.games[0].id)):alert(response.message)}).catch(function(error){alert(error)}).finally(function(){$scope.flags.busy=!1})}]),module.controller("RPGController",["$scope","$state","SessionProvider",function($scope,$state,SessionProvider){SessionProvider.get("userId")?$state.transitionTo("games.load"):$state.transitionTo("users.login"),$scope.transitionTo=function(state){$state.transitionTo(state)}}]),module.config(["$stateProvider",function($stateProvider){$stateProvider.state("users.login",{controller:"LoginController",templateUrl:"app/templates/users/login.html"})}]).controller("LoginController",["$scope","$state","SessionProvider","UsersResource",function($scope,$state,SessionProvider,UsersResource){$scope.flags={busy:!1},$scope.login=function(){$scope.flags.busy=!0,UsersResource.abort().login($scope.model).then(function(response){response.success?(SessionProvider.set("userId",response.model.id),$state.transitionTo("games.load")):alert(response.error)}).catch(function(error){alert(error)}).finally(function(){$scope.flags.busy=!1})}}]),module.config(["$stateProvider",function($stateProvider){$stateProvider.state("users.logout",{controller:"LogoutController"})}]).controller("LogoutController",["$state","SessionProvider","UsersResource",function($state,SessionProvider,UsersResource){UsersResource.abort().logout().then(function(response){response.success?(SessionProvider.remove("userId"),$state.transitionTo("users.login")):alert(response.message)}).catch(function(error){alert(error)})}]),module.config(["$stateProvider",function($stateProvider){$stateProvider.state("users.register",{controller:"RegisterController",templateUrl:"app/templates/users/register.html"})}]).controller("RegisterController",["$scope","$state","SessionProvider","UsersResource",function($scope,$state,SessionProvider,UsersResource){$scope.flags={busy:!1},$scope.register=function(){console.log($scope.model),$scope.model.pass===$scope.model.pass2?($scope.flags.busy=!0,UsersResource.abort().register($scope.model).then(function(response){response.success?(SessionProvider.set("userId",response.model.id),$state.transitionTo("games.load")):alert(response.error)}).catch(function(error){alert(error)}).finally(function(){$scope.flags.busy=!1})):alert("The passwords do not match.")}}]),module.config(["$stateProvider",function($stateProvider){$stateProvider.state("users",{abstract:!0,template:"<ui-view />"})}])}(angular.module("rpg",["ngResource","ui.router"])),angular.module("rpg").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("app/templates/games/load.html",'<dialog><form ng-submit=load()><header>Load Game</header><main><ul style="height: 160px;"><li ng-class="{ active: model.gameId == game.id }" ng-click="model.gameId = game.id;" ng-repeat="game in games">{{ game.title }}</li></ul></main><footer><button ng-disabled=flags.busy ng-click="transitionTo(\'users.logout\');" type=reset>Log Out</button> <button ng-disabled="flags.busy || !model.gameId" type=submit>Load Game</button> <button ng-disabled="flags.busy || true" type=reset>New Game</button></footer></form></dialog>'),$templateCache.put("app/templates/users/login.html",'<dialog><form name=loginForm ng-submit=login()><header>Log In</header><main><input style="display: none;"/> <input style="display: none;" type=password /> <label class=x-input-group><i class="fa fa-user"></i> <input ng-disabled=flags.busy ng-model=model.user placeholder=Username required/></label> <label class=x-input-group><i class="fa fa-key"></i> <input ng-disabled=flags.busy ng-model=model.pass placeholder=Password required type=password /></label></main><footer><button ng-disabled=flags.busy ng-click="transitionTo(\'users.register\');" type=reset>Register</button> <button ng-disabled="flags.busy || loginForm.$invalid" type=submit>Log In</button></footer></form></dialog>'),$templateCache.put("app/templates/users/register.html",'<dialog><form name=registerForm ng-submit=register()><header>Register</header><main><input style="display: none;"/> <input style="display: none;" type=password /> <label class=x-input-group><i class="fa fa-user"></i> <input ng-disabled=flags.busy ng-model=model.user placeholder=Username required/></label> <label class=x-input-group><i class="fa fa-envelope"></i> <input ng-disabled=flags.busy ng-model=model.email placeholder=Email required type=email /></label> <label class=x-input-group><i class="fa fa-key"></i> <input ng-disabled=flags.busy ng-model=model.pass placeholder=Password required type=password /></label> <label class=x-input-group><i class="fa fa-key"></i> <input ng-disabled=flags.busy ng-model=model.pass2 placeholder="Password (again)" required type=password /></label></main><footer><button ng-disabled=flags.busy ng-click="transitionTo(\'users.login\');" type=reset>Log In</button> <button ng-disabled="flags.busy || registerForm.$invalid || model.pass !== model.pass2" type=submit>Register</button></footer></form></dialog>')}]);